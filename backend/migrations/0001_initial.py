# Generated by Django 5.2.1 on 2025-05-20 15:36

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Enum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major_code', models.CharField(blank=True, max_length=20, verbose_name='Код специальности')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('qualification', models.CharField(max_length=50, verbose_name='Квалификация')),
                ('base_grade', models.CharField(choices=[('N', '9'), ('E', '11')], default='N', max_length=2, verbose_name='На базе классов')),
            ],
            options={
                'verbose_name': 'Специальность',
                'verbose_name_plural': 'Специальности',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_code', models.CharField(max_length=20, verbose_name='Шифр')),
                ('name', models.CharField(max_length=20, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=30, unique=True)),
                ('lastname', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Куратор',
                'verbose_name_plural': 'Кураторы',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Номер группы')),
                ('year_of_entry', models.IntegerField(default=2025, verbose_name='Год зачисления')),
                ('tutor_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Куратор')),
                ('major', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='backend.major', verbose_name='Специальность')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.IntegerField(verbose_name='Семестр')),
                ('examination_form', models.CharField(choices=[('E', 'Экзамен'), ('C', 'Зачет')], default='C', max_length=7, verbose_name='Форма аттестации')),
                ('major_id', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='backend.major', verbose_name='Специальность')),
                ('subject_id', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='backend.subject', verbose_name='Дисциплина')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastname', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('patronymic', models.CharField(max_length=100, verbose_name='Отчество')),
                ('birth_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Дата рождения')),
                ('registration_address', models.CharField(blank=True, max_length=50, verbose_name='Адрес регистрации')),
                ('residential_address', models.CharField(blank=True, max_length=50, verbose_name='Адрес проживания')),
                ('gender', models.CharField(choices=[('F', 'Женский'), ('M', 'Мужской')], default='F', max_length=7, verbose_name='Пол')),
                ('email', models.EmailField(blank=True, max_length=30, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('insurance_number', models.CharField(blank=True, max_length=20, verbose_name='СНИЛС')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='Health',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disabled', models.BooleanField(default=False, verbose_name='Является инвалидом')),
                ('disability_group', models.IntegerField(default='0', verbose_name='Группа инвалидности')),
                ('disability_category', models.CharField(blank=True, max_length=20, null=True, verbose_name='Категория инвалидности')),
                ('valid_since', models.DateField(blank=True, null=True, verbose_name='Начало действия группы инвалидности')),
                ('valid_until', models.DateField(blank=True, null=True, verbose_name='Окончание действия группы инвалидности')),
                ('recommendations', models.CharField(blank=True, max_length=100, null=True, verbose_name='Рекомендации врачей')),
                ('adaptive_program', models.BooleanField(default=False, verbose_name='Требуется адаптивная программа')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='health', to='backend.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Здоровье',
                'verbose_name_plural': 'Здоровье',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, verbose_name='Оценка')),
                ('subject_id', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='backend.course', verbose_name='Код изучения')),
                ('student_id', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='backend.student', verbose_name='Код студента')),
            ],
            options={
                'verbose_name': 'Успеваемость',
            },
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('relation', models.CharField(choices=[('F', 'Отец'), ('M', 'Мать'), ('G', 'Опекун')], default='M', max_length=1, verbose_name='Родство')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('occupation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Место работы')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Член семьи',
                'verbose_name_plural': 'Члены семьи',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Дата')),
                ('time', models.TimeField(default=datetime.time, verbose_name='Время')),
                ('event_type', models.CharField(choices=[('WORK', 'Профессионально-трудовое'), ('PATR', 'Гражданско-патриотическое'), ('CULT', 'Культурно-нравственное'), ('SPORT', 'Спортивно-оздоровительное'), ('PREV', 'Профилактическое'), ('COMP', 'Конкурсноe, экскурсионно-выставочное'), ('IND', 'Индивидуальная работа')], default='WORK', max_length=5, verbose_name='Тип мероприятия')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.group', verbose_name='Группа')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
            },
        ),
    ]
